name: dev

on:
  push:
    branches: [main]
  pull_request_target:
    branches: [main]

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Install make on Windows
        if: runner.os == 'Windows'
        run: choco install make
      - run: flutter pub get
      - run: make -C example tests
  build:
    runs-on: macos-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - run: git log --oneline
      - run: flutter --version
      - run: flutter pub get
      - run: git config --global user.name 'github-actions[bot]'
      - run: git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - run: make -C example build
      - uses: actions/upload-artifact@master
        with:
          name: build
          path: example/build/web
  firebase_deploy:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@master
        with:
          name: build
          path: example/build/web
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_GITSTAMP }}"
          projectId: gitstamp
          channelId: live
          entryPoint: ./example
  format_code:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: firebase_deploy
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
      - run: git pull
      - run: dart format bin
      - run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add bin
          if ! git diff-index --quiet HEAD; then
          git commit -m 'Code update'
            git push origin HEAD:main
          fi
  generate_screenshots:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: format_code
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.2'
          channel: 'stable'
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick
      - run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg2
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: git config --global user.name 'github-actions[bot]'
      - run: git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - run: git pull
      - run: flutter pub get
      - run: make -C example sync
      - run: make -C example screenshots
      - run: |
          git add .
          git commit -m 'Screenshot update'
          git push origin HEAD:main